<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="b798851a-21a5-4ea4-9bf0-09af1df9b6be" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/src/easy/advanced_destructuring.clj" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/easy/indexing_sequences.clj" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/easy/read_binary_number.clj" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/easy/removing_items.clj" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/easy/replicate_sequence.clj" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/easy/split_sequence.clj" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/easy/indexing_sequences_test.clj" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/easy/read_binary_number_test.clj" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/easy/removing_items_test.clj" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/easy/set_intersection_test.clj" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/easy/split_sequence_test.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/easy.iml" beforeDir="false" afterPath="$PROJECT_DIR$/easy.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/easy/#implement_range.clj#" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/easy/cartesian_product.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/easy/cartesian_product.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/easy/compress_a_sequence.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/easy/compress_sequence.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/easy/compress_sequence.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/easy/count_sequence.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/easy/count_sequence.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/easy/duplicate_sequence.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/easy/duplicate_sequence.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/easy/factorial_fun.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/easy/factorial_fun.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/easy/fibonacci_sequence.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/easy/fibonacci_sequence.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/easy/find_odd_numbers.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/easy/find_odd_numbers.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/easy/get_the_caps.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/easy/get_the_caps.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/easy/half_true.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/easy/half_true.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/easy/implement_range.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/easy/implement_range.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/easy/interleave_two_sequences.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/easy/interleave_two_sequences.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/easy/interpose_seq.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/easy/interpose_seq.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/easy/intro_to_some.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/easy/intro_to_some.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/easy/last_element.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/easy/last_element.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/easy/map_construction.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/easy/map_construction.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/easy/maximum_value.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/easy/maximum_value.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/easy/nth_element.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/easy/nth_element.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/easy/palindrome_detector.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/easy/palindrome_detector.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/easy/penultimate_element.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/easy/penultimate_element.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/easy/product_digits.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/easy/product_digits.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/easy/reverse_a_sequence.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/easy/reverse_a_sequence.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/easy/set_intersection.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/easy/set_intersection.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/easy/sum_it_all_up.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/easy/sum_it_all_up.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/easy/replicate_sequence_test.clj" beforeDir="false" afterPath="$PROJECT_DIR$/test/easy/replicate_sequence_test.clj" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CodeInsightWorkspaceSettings">
    <option name="optimizeImportsOnTheFly" value="true" />
  </component>
  <component name="DefaultGradleProjectSettings">
    <option name="isMigrated" value="true" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Clojure Namespace" />
        <option value="Clojure Test Namespace" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="ProjectId" id="1PMrRpmXI1iVQ6v5rnvnkHJQr0L" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="PropertiesComponent">
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="cursive.last.file.extension./home/wagner/devel/clojure/4clojure/easy/src" value="clj" />
    <property name="cursive.last.file.extension./home/wagner/devel/clojure/4clojure/easy/test" value="clj" />
    <property name="cursive.last.file.extension./home/wagner/devel/job-interview-preparation/nubank/4clojure/easy/src" value="clj" />
    <property name="cursive.last.file.extension./home/wagner/devel/job-interview-preparation/nubank/4clojure/easy/test" value="clj" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="project.structure.last.edited" value="Project" />
    <property name="project.structure.proportion" value="0.15" />
    <property name="project.structure.side.proportion" value="0.0" />
    <property name="settings.editor.selected.configurable" value="editor.preferences.folding" />
  </component>
  <component name="ReplState" timestamp="1565722569447">{:repl-history {:ide [], :local [{:command &quot;(get-last-element [1 2 3 4 5])&quot;, :offset 30, :ns &quot;easy.last-element&quot;} {:command &quot;(get-last-element number-seq)&quot;, :offset 29, :ns &quot;easy.last-element&quot;} {:command &quot;(get-last-element list-seq)&quot;, :offset 27, :ns &quot;easy.last-element&quot;} {:command &quot;(get-last-element string-seq)&quot;, :offset 29, :ns &quot;easy.last-element&quot;} {:command &quot;(foo (range 10))&quot;, :offset 16, :ns &quot;easy.penultimate-element&quot;} {:command &quot;(- 2 1)&quot;, :offset 7, :ns &quot;easy.penultimate-element&quot;} {:command &quot;(foo [1 2 3])&quot;, :offset 13, :ns &quot;easy.penultimate-element&quot;} {:command &quot;(foo [1 2 3 4 5])&quot;, :offset 17, :ns &quot;easy.penultimate-element&quot;} {:command &quot;(foo [1 2 3 4 5 6 7 8 9 10])&quot;, :offset 28, :ns &quot;easy.penultimate-element&quot;} {:command &quot;(get [22 1 15 54 12 87 11 9] 0)&quot;, :offset 31, :ns &quot;easy.penultimate-element&quot;} {:command &quot;([1 23 12] 2)&quot;, :offset 13, :ns &quot;easy.penultimate-element&quot;} {:command &quot;(foo [22 1 15 54 12 87 11 9])&quot;, :offset 29, :ns &quot;easy.penultimate-element&quot;} {:command &quot;(get-penultimate-element [1 2 3])&quot;, :offset 33, :ns &quot;easy.penultimate-element&quot;} {:command &quot;(get-penultimate-element '(1 2 3))&quot;, :offset 34, :ns &quot;easy.penultimate-element&quot;} {:command &quot;(count '(1 2 3))&quot;, :offset 16, :ns &quot;easy.penultimate-element&quot;} {:command &quot;(get-penultimate-element '(1))&quot;, :offset 30, :ns &quot;easy.penultimate-element&quot;} {:command &quot;(get-penultimate-element (list 1))&quot;, :offset 34, :ns &quot;easy.penultimate-element&quot;} {:command &quot;(foo (list 1 2 3))&quot;, :offset 18, :ns &quot;easy.penultimate-element&quot;} {:command &quot;(foo2 (list 1 2 3))&quot;, :offset 19, :ns &quot;easy.penultimate-element&quot;} {:command &quot;(foo3 (list 1 2 3))&quot;, :offset 19, :ns &quot;easy.penultimate-element&quot;} {:command &quot;(get '(1 2 3) 1)&quot;, :offset 16, :ns &quot;easy.penultimate-element&quot;} {:command &quot;(nth '(1 2 3) 1)&quot;, :offset 16, :ns &quot;easy.penultimate-element&quot;} {:command &quot;(get-penultimate-element first-seq)&quot;, :offset 35, :ns &quot;easy.penultimate-element&quot;} {:command &quot;(get-penultimate-element second-seq)&quot;, :offset 36, :ns &quot;easy.penultimate-element&quot;} {:command &quot;(get-penultimate-element third-seq)&quot;, :offset 35, :ns &quot;easy.penultimate-element&quot;} {:command &quot;(get-nth first-seq 2)&quot;, :offset 21, :ns &quot;easy.nth-element&quot;} {:command &quot;(is-upper? \\a)&quot;, :offset 14, :ns &quot;easy.get-the-caps&quot;} {:command &quot;(is-upper? \\B)&quot;, :offset 14, :ns &quot;easy.get-the-caps&quot;} {:command &quot;example&quot;, :offset 7, :ns &quot;easy.get-the-caps&quot;} {:command &quot;(clojure.string/join \&quot;\&quot; [\\H \\L \\O \\W \\R \\D])&quot;, :offset 44, :ns &quot;easy.get-the-caps&quot;} {:command &quot;(empty? [])&quot;, :offset 11, :ns &quot;easy.get-the-caps&quot;} {:command &quot;(empty? [1])&quot;, :offset 12, :ns &quot;easy.get-the-caps&quot;} {:command &quot;(not (empty? [1])) &quot;, :offset 18, :ns &quot;easy.get-the-caps&quot;} {:command &quot;(clojure.string/join \&quot;\&quot; [])&quot;, :offset 27, :ns &quot;easy.get-the-caps&quot;} {:command &quot;(clojure.string/join \&quot;\&quot; (get-caps example))&quot;, :offset 43, :ns &quot;easy.get-the-caps&quot;} {:command &quot;(get-caps example)&quot;, :offset 18, :ns &quot;easy.get-the-caps&quot;} {:command &quot;(get-caps \&quot;nothing\&quot;)&quot;, :offset 20, :ns &quot;easy.get-the-caps&quot;} {:command &quot;(empty? (get-caps \&quot;nothing\&quot;)) &quot;, :offset 29, :ns &quot;easy.get-the-caps&quot;} {:command &quot;(get-caps \&quot;$#A(*&amp;987Zf\&quot;)&quot;, :offset 24, :ns &quot;easy.get-the-caps&quot;} {:command &quot;(some #{2 7 6} [5 6 7 8])&quot;, :offset 25, :ns &quot;easy.intro-to-some&quot;} {:command &quot;(some #(when (even? %) %) [5 6 7 8])&quot;, :offset 36, :ns &quot;easy.intro-to-some&quot;} {:command &quot;(conj [] 1 1)&quot;, :offset 13, :ns &quot;easy.intro-to-some&quot;} {:command &quot;(duplicate-sequence [1 2 3])&quot;, :offset 28, :ns &quot;easy.duplicate-sequence&quot;} {:command &quot;(duplicate-sequence [[1 2] [3 4]])&quot;, :offset 34, :ns &quot;easy.duplicate-sequence&quot;} {:command &quot;(reduce conj #{} [1 1 2 2 3 3])&quot;, :offset 31, :ns &quot;easy.duplicate-sequence&quot;} {:command &quot;(reduce conj sorted-set [1 1 2 2 3 3])&quot;, :offset 38, :ns &quot;easy.duplicate-sequence&quot;} {:command &quot;(reduce conj sorted-set a [1 1 2 2 3 3])&quot;, :offset 40, :ns &quot;easy.duplicate-sequence&quot;} {:command &quot;(sorted-set )&quot;, :offset 13, :ns &quot;easy.duplicate-sequence&quot;} {:command &quot;(reduce conj (sorted-set) [1 1 2 2 3 3])&quot;, :offset 40, :ns &quot;easy.duplicate-sequence&quot;} {:command &quot;(compress-sequence [1 1 2 2 3 3])&quot;, :offset 33, :ns &quot;easy.compress-a-sequence&quot;} {:command &quot;(compress-sequence \&quot;Leeeeeerrroyyy\&quot;)&quot;, :offset 36, :ns &quot;easy.compress-a-sequence&quot;} {:command &quot;(dec -2)&quot;, :offset 8, :ns &quot;easy.implement-range&quot;} {:command &quot;(inc -2)&quot;, :offset 8, :ns &quot;easy.implement-range&quot;} {:command &quot;(my-range 1 4)&quot;, :offset 14, :ns &quot;easy.implement-range&quot;} {:command &quot;(my-range -2 2)&quot;, :offset 15, :ns &quot;easy.implement-range&quot;} {:command &quot;(my-range 5 8)&quot;, :offset 14, :ns &quot;easy.implement-range&quot;} {:command &quot;(my-interleave [1 2 3] [:a :b :c])&quot;, :offset 34, :ns &quot;easy.interleave-two-sequences&quot;} {:command &quot;(my-interleave [1 2] [3 4 5 6])&quot;, :offset 31, :ns &quot;easy.interleave-two-sequences&quot;} {:command &quot;(my-interleave [1 2 3 4] [1 5])&quot;, :offset 31, :ns &quot;easy.interleave-two-sequences&quot;} {:command &quot;(my-interleave [1 2 3 4] [5])&quot;, :offset 29, :ns &quot;easy.interleave-two-sequences&quot;} {:command &quot;(my-interleave [30 20] [25 15])&quot;, :offset 31, :ns &quot;easy.interleave-two-sequences&quot;} {:command &quot;(repeat 1 [1 2])&quot;, :offset 16, :ns &quot;easy.interleave-two-sequences&quot;} {:command &quot;(repeat 2 [1 2])&quot;, :offset 16, :ns &quot;easy.interleave-two-sequences&quot;} {:command &quot;(conj [] (repeat 1 [1 2]))&quot;, :offset 26, :ns &quot;easy.interleave-two-sequences&quot;} {:command &quot;(conj [] (repeat 2 [1 2]))&quot;, :offset 26, :ns &quot;easy.interleave-two-sequences&quot;} {:command &quot;(filter #(= % 25) [1 2 3 25])&quot;, :offset 29, :ns &quot;easy.interleave-two-sequences&quot;} {:command &quot;(filter #(= % 15) [1 2 3 25])&quot;, :offset 29, :ns &quot;easy.interleave-two-sequences&quot;} {:command &quot;(some #(= % 15) [1 2 3 25])&quot;, :offset 27, :ns &quot;easy.interleave-two-sequences&quot;} {:command &quot;(some #(= % 25) [1 2 3 25])&quot;, :offset 27, :ns &quot;easy.interleave-two-sequences&quot;} {:command &quot;(dotimes [n 5]\n  (println n))&quot;, :offset 29, :ns &quot;easy.interleave-two-sequences&quot;} {:command &quot;(doseq [n [1 2 3 4 5]]\n  println n)&quot;, :offset 35, :ns &quot;easy.interleave-two-sequences&quot;} {:command &quot;(doseq [n [1 2 3 4 5]]\n  (println n))&quot;, :offset 37, :ns &quot;easy.interleave-two-sequences&quot;} {:command &quot;(some #(= % 25) [1 25 2 3 14])&quot;, :offset 30, :ns &quot;easy.compress-a-sequence&quot;} {:command &quot;(some #(= % 15) [1 25 2 3 14])&quot;, :offset 30, :ns &quot;easy.compress-a-sequence&quot;} {:command &quot;(empty? (some #(= % 25) [1 25 2 3 14])) &quot;, :offset 39, :ns &quot;easy.compress-a-sequence&quot;} {:command &quot;(true? (some #(= % 25) [1 25 2 3 14])) &quot;, :offset 38, :ns &quot;easy.compress-a-sequence&quot;} {:command &quot;(true? (some #(= % 15) [1 25 2 3 14])) &quot;, :offset 38, :ns &quot;easy.compress-a-sequence&quot;} {:command &quot;(true? (some #(= % 15) [])) &quot;, :offset 27, :ns &quot;easy.compress-a-sequence&quot;} {:command &quot;(compress-sequence [1 1 2 3 3 2 2 3])&quot;, :offset 37, :ns &quot;easy.compress-a-sequence&quot;}], :remote []}}</component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Clojure REPL.repl">
    <configuration default="true" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <module name="" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Remote" activateToolWindowBeforeRun="false">
      <setting name="host" value="" />
      <setting name="port" value="0" />
      <setting name="replType" value="0" />
      <module name="" />
      <method v="2" />
    </configuration>
    <configuration name="repl" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <module name="easy" />
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <method v="2" />
    </configuration>
    <configuration name="set_intersection" type="ClojureScriptRunConfiguration" factoryName="Clojure Script" temporary="true">
      <module name="easy" />
      <setting name="path" value="$PROJECT_DIR$/src/easy/set_intersection.clj" />
      <setting name="namespace" value="" />
      <setting name="execution" value="INTELLIJ" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workDir" value="$PROJECT_DIR$/src/easy" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Clojure Application.set_intersection" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="b798851a-21a5-4ea4-9bf0-09af1df9b6be" name="Default Changelist" comment="" />
      <created>1565454045160</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1565454045160</updated>
    </task>
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_ORDER" />
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="masterDetails">
    <states>
      <state key="GlobalLibrariesConfigurable.UI">
        <settings>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="JdkListConfigurable.UI">
        <settings>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ProjectLibrariesConfigurable.UI">
        <settings>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
    </states>
  </component>
</project>